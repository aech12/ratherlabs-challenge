import { useState } from 'react';
import { Web3Provider } from '@ethersproject/providers';
import { useWeb3React } from '@web3-react/core';
import { AaveProtocolDataProviderFactory } from '@aave/protocol-js';

export default function Pools() {
  const [poolsData, setPoolsData] = useState([]);
  const { library } = useWeb3React();

  async function getPoolsData() {
    const provider = new Web3Provider(library.provider);
    const dataProvider = await AaveProtocolDataProviderFactory.connect(
      process.env.NEXT_PUBLIC_DATA_PROVIDER_ADDRESS,
      provider
    );
    const pools = await dataProvider.getAllPools();
    const poolsData = await Promise.all(
      pools.map(async (pool) => {
        const poolReserves = await dataProvider.getReserveData(pool.address);
        return {
          liquidity: poolReserves.availableLiquidity.toString(),
          price: poolReserves.priceInEth.toString(),
          address: pool.address,
          name: pool.name,
          symbol: pool.symbol,
          apy: poolReserves.liquidityRate.toString(),
          updatedAt: new Date(poolReserves.timestamp.toNumber() * 1000),
        };
      })
    );
    setPoolsData(poolsData);
  }

  return (
    <div>
      <button onClick={getPoolsData}>Get Pools Data</button>
      <ul>
        {poolsData.map((pool) => (
          <li key={pool.address}>
            <h2>{pool.name}</h2>
            <p>Liquidity: {pool.liquidity}</p>
            <p>Price in ETH: {pool.price}</p>
            <p>Symbol: {pool.symbol}</p>
            <p>APY: {pool.apy}</p>
            <p>Updated At: {pool.updatedAt.toLocaleString()}</p>
          </li>
        ))}
      </ul>
    </div>
  );
}